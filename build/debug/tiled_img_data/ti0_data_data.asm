_TI0_FRAME_INGAME_DIALOG_COPY_LEN = 44
			.word 0 ; safety pair of bytes for reading by POP B
_ti0_frame_ingame_dialog:
			.word _TI0_FRAME_INGAME_DIALOG_COPY_LEN ; data len to copy
			.word 0x8000 + (0<<8 | 0)	; scr addr
			.word 0x8000 + (32<<8 | 64)	; scr addr end
			.byte 0x08, 0xFF, 0x09, 0x1E, 0x0A, 0x07, 0xFF, 0x05, 0x1E, 0x06, 0x04, 0xFF, 0x05, 0x1E, 0x06, 0x04, 
			.byte 0xFF, 0x05, 0x1E, 0x06, 0x04, 0xFF, 0x05, 0x1E, 0x06, 0x04, 0xFF, 0x05, 0x1E, 0x06, 0x04, 0xFF, 
			.byte 0x05, 0x1E, 0x06, 0x01, 0xFF, 0x02, 0x1E, 0x03, 
_TI0_MAIN_MENU_BACK2_COPY_LEN = 192
			.word 0 ; safety pair of bytes for reading by POP B
_ti0_main_menu_back2:
			.word _TI0_MAIN_MENU_BACK2_COPY_LEN ; data len to copy
			.word 0x8000 + (0<<8 | 0)	; scr addr
			.word 0x8000 + (32<<8 | 128)	; scr addr end
			.byte 0x1E, 0x1F, 0x20, 0x21, 0x22, 0x23, 0x24, 0x22, 0x23, 0x20, 0x21, 0x23, 0x24, 0x22, 0x23, 0x20, 
			.byte 0x21, 0x22, 0x23, 0x25, 0x24, 0x22, 0x23, 0x20, 0x21, 0x22, 0x23, 0x21, 0x22, 0x23, 0x26, 0x1E, 
			.byte 0x17, 0x18, 0x19, 0x1A, 0x19, 0x1A, 0x1B, 0x19, 0x1A, 0x1A, 0x19, 0x1A, 0x1B, 0x19, 0x1A, 0x19, 
			.byte 0x1A, 0x19, 0x1A, 0x1C, 0x1B, 0x19, 0x1A, 0x1A, 0x1C, 0x19, 0x1A, 0x1C, 0x19, 0x1A, 0x1D, 0x17, 
			.byte 0x11, 0x12, 0x13, 0x14, 0x13, 0x14, 0x13, 0x14, 0x13, 0x14, 0x13, 0x14, 0x13, 0x14, 0x13, 0x14, 
			.byte 0x13, 0x14, 0x13, 0x14, 0x13, 0x13, 0x13, 0x14, 0x14, 0x13, 0x13, 0x14, 0x14, 0x14, 0x15, 0x16, 
			.byte 0x0B, 0x0C, 0xFF, 0x00, 0x1C, 0x10, 0x0E, 0x0B, 0x0F, 0xFF, 0x00, 0x1C, 0x0D, 0x0E, 0x0B, 0x0C, 
			.byte 0xFF, 0x00, 0x1C, 0x0D, 0x0E, 0x0B, 0x0C, 0xFF, 0x00, 0x1C, 0x10, 0x0E, 0x0B, 0x0F, 0xFF, 0x00, 
			.byte 0x1C, 0x0D, 0x0E, 0x0B, 0x0F, 0xFF, 0x00, 0x1C, 0x10, 0x0E, 0x0B, 0x0C, 0xFF, 0x00, 0x1C, 0x0D, 
			.byte 0x0E, 0x0B, 0x0F, 0xFF, 0x00, 0x1C, 0x10, 0x0E, 0x0B, 0x0C, 0xFF, 0x00, 0x1C, 0x0D, 0x0E, 0x0B, 
			.byte 0x0F, 0xFF, 0x00, 0x1C, 0x10, 0x0E, 0x0B, 0x0C, 0xFF, 0x00, 0x1C, 0x0D, 0x0E, 0x0B, 0x0F, 0xFF, 
			.byte 0x00, 0x1C, 0x10, 0x0E, 0x0B, 0x0C, 0xFF, 0x00, 0x1C, 0x0D, 0x0E, 
_TI0_MAIN_MENU_BACK1_COPY_LEN = 166
			.word 0 ; safety pair of bytes for reading by POP B
_ti0_main_menu_back1:
			.word _TI0_MAIN_MENU_BACK1_COPY_LEN ; data len to copy
			.word 0x8000 + (0<<8 | 128)	; scr addr
			.word 0x8000 + (32<<8 | 0)	; scr addr end
			.byte 0x0B, 0x0C, 0xFF, 0x00, 0x1C, 0x10, 0x0E, 0x0B, 0x0C, 0xFF, 0x00, 0x1C, 0x0D, 0x1D, 0x1D, 0x0F, 
			.byte 0xFF, 0x00, 0x1C, 0x10, 0x16, 0x11, 0x0C, 0xFF, 0x00, 0x1C, 0x0D, 0x0E, 0x0B, 0x0F, 0xFF, 0x00, 
			.byte 0x1C, 0x10, 0x0E, 0x0B, 0x0C, 0xFF, 0x00, 0x1C, 0x0D, 0x0E, 0x0B, 0x0C, 0xFF, 0x00, 0x1C, 0x10, 
			.byte 0x0E, 0x0B, 0x0F, 0xFF, 0x00, 0x1C, 0x0D, 0x0E, 0x0B, 0x0C, 0xFF, 0x00, 0x1C, 0x10, 0x0E, 0x0B, 
			.byte 0x0F, 0xFF, 0x00, 0x1C, 0x0D, 0x0E, 0x0B, 0x0C, 0xFF, 0x00, 0x1C, 0x10, 0x0E, 0x0B, 0x0F, 0xFF, 
			.byte 0x00, 0x1C, 0x0D, 0x0E, 0x0B, 0x0C, 0xFF, 0x00, 0x1C, 0x10, 0x0E, 0x0B, 0x0F, 0xFF, 0x00, 0x1C, 
			.byte 0x10, 0x0E, 0x0B, 0x27, 0x28, 0x29, 0x28, 0x29, 0x28, 0x28, 0x29, 0x29, 0x28, 0x29, 0x29, 0x29, 
			.byte 0x28, 0x28, 0x29, 0x29, 0x28, 0x28, 0x29, 0x29, 0x28, 0x29, 0x29, 0x28, 0x29, 0x29, 0x28, 0x29, 
			.byte 0x29, 0x0E, 0x11, 0x12, 0x12, 0x1C, 0x1B, 0x19, 0x1A, 0x1C, 0x1B, 0x19, 0x1A, 0x1C, 0x1B, 0x1A, 
			.byte 0x19, 0x1A, 0x19, 0x1A, 0x1C, 0x1B, 0x19, 0x1A, 0x19, 0x1E, 0x1A, 0x1B, 0x1B, 0x19, 0x1A, 0x11, 
			.byte 0x16, 0x16, 
_TI0_TITLE1_COPY_LEN = 186
			.word 0 ; safety pair of bytes for reading by POP B
_ti0_title1:
			.word _TI0_TITLE1_COPY_LEN ; data len to copy
			.word 0x8000 + (4<<8 | 160)	; scr addr
			.word 0x8000 + (27<<8 | 232)	; scr addr end
			.byte 0xA5, 0xA6, 0xA7, 0xA8, 0xA9, 0xFF, 0xAA, 0x0F, 0xAB, 0x00, 0x00, 0x96, 0x97, 0x98, 0x99, 0x9A, 
			.byte 0x9B, 0x9C, 0x9D, 0x9E, 0x9F, 0x9E, 0xA0, 0x9F, 0x9E, 0x9E, 0x9F, 0x9F, 0x9E, 0x9B, 0xA1, 0xA2, 
			.byte 0xA3, 0xA4, 0x00, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F, 
			.byte 0x90, 0x91, 0x89, 0x92, 0x93, 0x00, 0x94, 0x95, 0x00, 0x00, 0x00, 0x73, 0x74, 0x75, 0x00, 0x76, 
			.byte 0x77, 0x00, 0x78, 0x79, 0x7A, 0x7B, 0x7C, 0x00, 0x7D, 0x77, 0x7E, 0x7F, 0x80, 0x81, 0x82, 0x00, 
			.byte 0x00, 0x00, 0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x00, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 
			.byte 0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x00, 0x00, 0x00, 0x4D, 0x00, 0x4E, 0x4F, 0x50, 0x51, 0x52, 
			.byte 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x00, 0x5D, 0x5E, 0x5F, 0xFF, 0x00, 
			.byte 0x04, 0x3F, 0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0xFF, 
			.byte 0x00, 0x05, 0xFF, 0x00, 0x04, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 
			.byte 0x3C, 0x3D, 0x3E, 0xFF, 0x00, 0x05, 0xFF, 0x00, 0x05, 0x2A, 0x2B, 0x2C, 0xFF, 0x00, 0x07, 0x2D, 
			.byte 0x2E, 0x2F, 0x30, 0xFF, 0x00, 0x04, 
_TI0_FRAME_MAIN_MENU_COPY_LEN = 108
			.word 0 ; safety pair of bytes for reading by POP B
_ti0_frame_main_menu:
			.word _TI0_FRAME_MAIN_MENU_COPY_LEN ; data len to copy
			.word 0x8000 + (9<<8 | 56)	; scr addr
			.word 0x8000 + (23<<8 | 160)	; scr addr end
			.byte 0x28, 0x29, 0x28, 0x29, 0x29, 0x28, 0x29, 0x28, 0x29, 0x28, 0x29, 0x28, 0x29, 0x00, 0x08, 0xFF, 
			.byte 0x09, 0x0B, 0x0A, 0x0C, 0x07, 0x0F, 0xFF, 0x00, 0x0A, 0x06, 0x0F, 0x04, 0x0C, 0xFF, 0x00, 0x0A, 
			.byte 0x06, 0x0C, 0x04, 0x0F, 0xFF, 0x00, 0x0A, 0x06, 0x0F, 0x04, 0x0C, 0xFF, 0x00, 0x0A, 0x06, 0x0C, 
			.byte 0x04, 0x0F, 0xFF, 0x00, 0x0A, 0x06, 0x0F, 0x04, 0x0C, 0xFF, 0x00, 0x0A, 0x06, 0x0C, 0x04, 0x0F, 
			.byte 0xFF, 0x00, 0x0A, 0x06, 0x0F, 0x04, 0x0C, 0xFF, 0x00, 0x0A, 0x06, 0x0C, 0x04, 0x0F, 0xFF, 0x00, 
			.byte 0x0A, 0x06, 0x0F, 0x04, 0xAC, 0x29, 0x28, 0x29, 0x28, 0x29, 0x28, 0x28, 0x29, 0x28, 0x29, 0x06, 
			.byte 0x0C, 0x01, 0xFF, 0x02, 0x0B, 0x03, 0x0F, 
_TI0_FRAME_INGAME_TOP_COPY_LEN = 44
			.word 0 ; safety pair of bytes for reading by POP B
_ti0_frame_ingame_top:
			.word _TI0_FRAME_INGAME_TOP_COPY_LEN ; data len to copy
			.word 0x8000 + (0<<8 | 240)	; scr addr
			.word 0x8000 + (32<<8 | 0)	; scr addr end
			.byte 0xB7, 0xB8, 0xB9, 0xBA, 0xBA, 0xBB, 0xFF, 0xBA, 0x0C, 0xBB, 0xBA, 0xBA, 0xBC, 0xBD, 0xBE, 0xBF, 
			.byte 0xFF, 0xBA, 0x06, 0xC0, 0xAD, 0xAE, 0xAF, 0xB0, 0xB0, 0xB1, 0xFF, 0xB0, 0x0C, 0xB1, 0xB0, 0xB0, 
			.byte 0xB2, 0xB3, 0xB4, 0xB5, 0xFF, 0xB0, 0x06, 0xB6, 
_TI0_RES_MANA_COPY_LEN = 12
			.word 0 ; safety pair of bytes for reading by POP B
_ti0_res_mana:
			.word _TI0_RES_MANA_COPY_LEN ; data len to copy
			.word 0x8000 + (6<<8 | 240)	; scr addr
			.word 0x8000 + (10<<8 | 0)	; scr addr end
			.byte 0xC3, 0xC4, 0xBA, 0xBA, 0xC1, 0xC2, 0xB0, 0xB0, 
_TI0_RES_SWORD_COPY_LEN = 12
			.word 0 ; safety pair of bytes for reading by POP B
_ti0_res_sword:
			.word _TI0_RES_SWORD_COPY_LEN ; data len to copy
			.word 0x8000 + (6<<8 | 240)	; scr addr
			.word 0x8000 + (10<<8 | 0)	; scr addr end
			.byte 0xC7, 0xC8, 0xBA, 0xBA, 0xC5, 0xC6, 0xB0, 0xB0, 
_TI0_RES_POTION_HEALTH_COPY_LEN = 12
			.word 0 ; safety pair of bytes for reading by POP B
_ti0_res_potion_health:
			.word _TI0_RES_POTION_HEALTH_COPY_LEN ; data len to copy
			.word 0x8000 + (6<<8 | 240)	; scr addr
			.word 0x8000 + (10<<8 | 0)	; scr addr end
			.byte 0xCB, 0xCC, 0xBA, 0xBA, 0xC9, 0xCA, 0xB0, 0xB0, 
_TI0_RES_POTION_MANA_COPY_LEN = 12
			.word 0 ; safety pair of bytes for reading by POP B
_ti0_res_potion_mana:
			.word _TI0_RES_POTION_MANA_COPY_LEN ; data len to copy
			.word 0x8000 + (6<<8 | 240)	; scr addr
			.word 0x8000 + (10<<8 | 0)	; scr addr end
			.byte 0xCF, 0xD0, 0xBA, 0xBA, 0xCD, 0xCE, 0xB0, 0xB0, 
_TI0_RES_TNT_COPY_LEN = 12
			.word 0 ; safety pair of bytes for reading by POP B
_ti0_res_tnt:
			.word _TI0_RES_TNT_COPY_LEN ; data len to copy
			.word 0x8000 + (6<<8 | 240)	; scr addr
			.word 0x8000 + (10<<8 | 0)	; scr addr end
			.byte 0xD3, 0xD4, 0xBA, 0xBA, 0xD1, 0xD2, 0xB0, 0xB0, 
_TI0_RES_CLOTHES_COPY_LEN = 12
			.word 0 ; safety pair of bytes for reading by POP B
_ti0_res_clothes:
			.word _TI0_RES_CLOTHES_COPY_LEN ; data len to copy
			.word 0x8000 + (6<<8 | 240)	; scr addr
			.word 0x8000 + (10<<8 | 0)	; scr addr end
			.byte 0xD7, 0xD8, 0xBA, 0xBA, 0xD5, 0xD6, 0xB0, 0xB0, 
_TI0_RES_CABBAGE_COPY_LEN = 12
			.word 0 ; safety pair of bytes for reading by POP B
_ti0_res_cabbage:
			.word _TI0_RES_CABBAGE_COPY_LEN ; data len to copy
			.word 0x8000 + (6<<8 | 240)	; scr addr
			.word 0x8000 + (10<<8 | 0)	; scr addr end
			.byte 0xDB, 0xDC, 0xBA, 0xBA, 0xD9, 0xDA, 0xB0, 0xB0, 
_TI0_RES_SPOON_COPY_LEN = 8
			.word 0 ; safety pair of bytes for reading by POP B
_ti0_res_spoon:
			.word _TI0_RES_SPOON_COPY_LEN ; data len to copy
			.word 0x8000 + (6<<8 | 240)	; scr addr
			.word 0x8000 + (8<<8 | 0)	; scr addr end
			.byte 0xDF, 0xE0, 0xDD, 0xDE, 
_TI0_RES_CAN_COPY_LEN = 8
			.word 0 ; safety pair of bytes for reading by POP B
_ti0_res_can:
			.word _TI0_RES_CAN_COPY_LEN ; data len to copy
			.word 0x8000 + (6<<8 | 240)	; scr addr
			.word 0x8000 + (8<<8 | 0)	; scr addr end
			.byte 0xE3, 0xE4, 0xE1, 0xE2, 
_TI0_RES_FULL_CAN_COPY_LEN = 8
			.word 0 ; safety pair of bytes for reading by POP B
_ti0_res_full_can:
			.word _TI0_RES_FULL_CAN_COPY_LEN ; data len to copy
			.word 0x8000 + (6<<8 | 240)	; scr addr
			.word 0x8000 + (8<<8 | 0)	; scr addr end
			.byte 0xE7, 0xE8, 0xE5, 0xE6, 
_TI0_RES_SCARECROW_COPY_LEN = 8
			.word 0 ; safety pair of bytes for reading by POP B
_ti0_res_scarecrow:
			.word _TI0_RES_SCARECROW_COPY_LEN ; data len to copy
			.word 0x8000 + (6<<8 | 240)	; scr addr
			.word 0x8000 + (8<<8 | 0)	; scr addr end
			.byte 0xEB, 0xEC, 0xE9, 0xEA, 
_TI0_ITEM_KEY_0_COPY_LEN = 8
			.word 0 ; safety pair of bytes for reading by POP B
_ti0_item_key_0:
			.word _TI0_ITEM_KEY_0_COPY_LEN ; data len to copy
			.word 0x8000 + (19<<8 | 240)	; scr addr
			.word 0x8000 + (21<<8 | 0)	; scr addr end
			.byte 0xEF, 0xF0, 0xED, 0xEE, 
_TI0_ITEM_KEY_1_COPY_LEN = 8
			.word 0 ; safety pair of bytes for reading by POP B
_ti0_item_key_1:
			.word _TI0_ITEM_KEY_1_COPY_LEN ; data len to copy
			.word 0x8000 + (19<<8 | 240)	; scr addr
			.word 0x8000 + (21<<8 | 0)	; scr addr end
			.byte 0xF3, 0xF4, 0xF1, 0xF2, 
_TI0_ITEM_KEY_2_COPY_LEN = 8
			.word 0 ; safety pair of bytes for reading by POP B
_ti0_item_key_2:
			.word _TI0_ITEM_KEY_2_COPY_LEN ; data len to copy
			.word 0x8000 + (19<<8 | 240)	; scr addr
			.word 0x8000 + (21<<8 | 0)	; scr addr end
			.byte 0xF7, 0xF8, 0xF5, 0xF6, 
_TI0_ITEM_KEY_3_COPY_LEN = 8
			.word 0 ; safety pair of bytes for reading by POP B
_ti0_item_key_3:
			.word _TI0_ITEM_KEY_3_COPY_LEN ; data len to copy
			.word 0x8000 + (19<<8 | 240)	; scr addr
			.word 0x8000 + (21<<8 | 0)	; scr addr end
			.byte 0xFB, 0xFC, 0xF9, 0xFA, 
_TI0_ITEM_KEY_4_COPY_LEN = 8
			.word 0 ; safety pair of bytes for reading by POP B
_ti0_item_key_4:
			.word _TI0_ITEM_KEY_4_COPY_LEN ; data len to copy
			.word 0x8000 + (19<<8 | 240)	; scr addr
			.word 0x8000 + (21<<8 | 0)	; scr addr end
			.byte 0xFF, 0x100, 0xFD, 0xFE, 
_TI0_RES_EMPTY_COPY_LEN = 10
			.word 0 ; safety pair of bytes for reading by POP B
_ti0_res_empty:
			.word _TI0_RES_EMPTY_COPY_LEN ; data len to copy
			.word 0x8000 + (6<<8 | 240)	; scr addr
			.word 0x8000 + (10<<8 | 0)	; scr addr end
			.byte 0xFF, 0xBA, 0x04, 0xFF, 0xB0, 0x04, 
_TI0_ITEM_EMPTY_COPY_LEN = 8
			.word 0 ; safety pair of bytes for reading by POP B
_ti0_item_empty:
			.word _TI0_ITEM_EMPTY_COPY_LEN ; data len to copy
			.word 0x8000 + (19<<8 | 240)	; scr addr
			.word 0x8000 + (21<<8 | 0)	; scr addr end
			.byte 0xBA, 0xBA, 0xB0, 0xB0, 
