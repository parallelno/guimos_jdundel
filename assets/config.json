{
	"game_name" : "guimos_jdundel",
	"com_filename" : "gj",
	"asset_type" : "config",
	"consts" : [
		"DEBUG = 1",
		"TEXT_MONOSPACED_CHARS = 0",
		"DRAW_FPS = 1",
		"LOCALIZATION = 0"
	],
	"scripts" : [
		{
			"id" : 0,
			"active" : false,
			"comment" : "BC updated in the stack critical section",
			"code" : "local sp = GetSP()\nif sp > 0x7FBE and sp < 0x7FFE then return end\nlocal opcode = GetOpcode()\nif opcode > 0x4F then return end\nif opcode > 0x0E and opcode < 0x40 then return end\n\nlocal opcodesToSkip = {\n    [0x00] = true,\n    [0x02] = true,\n    [0x07] = true,\n    [0x08] = true,\n    [0x09] = true,\n    [0x0A] = true,\n}\nif opcodesToSkip[opcode] then return end\nif not GetINTE() then return end\nif GetByteGlobal(0x38) ~= 0xC3 or GetByteGlobal(0x39) ~= 0x78 or GetByteGlobal(0x3A) ~= 0x05 then return end\n\nprint(\"Warning! Overrideing BC in a stack critical section\")\nprint(string.format(\"PC = %04X\", GetPC()))\nprint(string.format(\"Opcode = %02X\", GetOpcode()))\nBreak()"
		},
		{
			"id" : 1,
			"active" : true,
			"comment" : "FPS",
			"code" : "local pc = GetPC()\nif pc ~= 0x5CB then return end\n\nlocal fpsL = GetByteGlobal(0x5CC)\nlocal fpsH = GetByteGlobal(0x5CD)\n\nlocal fps = fpsH * 256 + fpsL\n\nDrawText(0, string.format(\"FPS %d\", fps), 10, 10)\n"
		},
		{
			"id": 2,
            "active": false,
			"comment": "RECT test",
            "code": "local pc = GetPC()\nif pc ~= 0x5CB then return end\n\nlocal fpsL = GetByteGlobal(0x5CC)\nlocal fpsH = GetByteGlobal(0x5CD)\n\nlocal fps = fpsH * 256 + fpsL\n\nDrawRect(1, 10, 20, fps, 10, 0xFFFFFF20)\n"
        }
	],
	"dependencies" :
	{
		"exporters": {
			"sprite" : "scripts/export/export_sprite.py",
			"back" : "scripts/export/export_back.py",
			"decal" : "scripts/export/export_decal.py",
			"level_data" : "scripts/export/export_level_data.py",
			"level_gfx" : "scripts/export/export_level_gfx.py",
			"music" : "scripts/export/export_music.py",
			"font" : "scripts/export/export_font.py",
			"tiled_img_data" : "scripts/export/export_tiled_img_data.py",
			"tiled_img_gfx" : "scripts/export/export_tiled_img_gfx.py",
			"text_eng" : "scripts/export/export_text.py",
			"text_rus" : "scripts/export/export_text.py"
		},
		"scripts" : [
			"assets/config.json",
			"scripts/export/export_config.py",
			"scripts/export/export_config_utils.py",
			"scripts/build_and_run.py",
			"scripts/utils/build.py",
			"scripts/utils/common.py",
			"scripts/utils/common_gfx.py",
			"scripts/export/export_level_utils.py",
			"scripts/export/export_tiled_img_utils.py"
		]
	},
	"export_dir" :
	{
		"code" : "code/",
		"bin" : "bin/"
	},
	"assembler_path" : "tools/retroassembler/retroassembler.exe -C=8080 -c",
	"assembler_labels_cmd" : " -x",
	"emulator_path" : "../devector/bin/devector.exe",
	"packer_path" : "tools/zx0salvador.exe -v -classic",
	"build_db_path" : "build/build.db",
	"main_asm_path" : "asm/main.asm",
	"basefdd_path" : "assets/basefdd/rds308.fdd",
	"ram_disk_reserve" :
	[
		{
			"name" : "BACKBUFF2",
			"bank_idx" : 0,
			"addr" : "0xA000",
			"len" : "0x6000",
			"comment" : "to restore a background in the backbuffer"
		},
		{
			"name" : "BACKBUFF",
			"bank_idx" : 1,
			"addr" : "0xA000",
			"len" : "0x6000",
			"comment" : "to avoid sprite flickering when it's consecutively erased/rendered"
		}
	],
	"permanent_load_name" : "permanent",
	"loads" : {
		"permanent" :
		[
			"assets/fonts/eng/font.json"
		],
		"level0" :
		[
			"assets/sprites/knight.json",
			"assets/sprites/hero_l.json",
			"assets/sprites/vfx.json",
			"assets/sprites/scythe.json",
			"assets/levels/lv0_gfx.json",
			"assets/sprites/bomb.json",
			"assets/sprites/hero_r.json",
			"assets/sprites/burner.json",
			"assets/sprites/skeleton.json",
			"assets/backs/backs0.json",
			"assets/levels/lv0_data.json",
			"assets/decals/decals0.json",
			"assets/sprites/sword.json",
			"assets/sprites/vampire.json",
			"assets/tiled_imgs/ti0_gfx.json",
			"assets/text/text_lv0.json",
			"assets/sprites/snowflake.json",
			"assets/sprites/tnt.json",				
			"assets/tiled_imgs/ti0_data.json",
			"assets/sprites/vfx4.json",
			"assets/music/song01.json"
		]
	}
}